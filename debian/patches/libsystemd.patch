From: Michael Biebl <biebl@debian.org>
Date: Sat, 8 Aug 2015 10:29:25 -0700
Subject: Build against libsystemd

libsystemd-daemon has been replaced with libsystemd in new versions
of the systemd package.  Update the m4/systemd.m4 file from more
recent versions of rra-c-util to cope, and update Makefile.am for the
new variable names.
---
 Makefile.am   |  4 ++--
 m4/systemd.m4 | 20 ++++++++++++++------
 2 files changed, 16 insertions(+), 8 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index dac972f..b6df6f9 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -184,12 +184,12 @@ server_remctld_SOURCES = portable/event-extra.c server/commands.c	    \
 	server/server-v2.c
 server_remctld_CPPFLAGS = -DCONFIG_FILE=\"$(sysconfdir)/remctl.conf\"	\
 	$(GSSAPI_CPPFLAGS) $(KRB5_CPPFLAGS) $(GPUT_CPPFLAGS)		\
-	$(PCRE_CPPFLAGS) $(LIBEVENT_CPPFLAGS) $(SYSTEMD_DAEMON_CFLAGS)
+	$(PCRE_CPPFLAGS) $(LIBEVENT_CPPFLAGS) $(SYSTEMD_CFLAGS)
 server_remctld_LDFLAGS = $(GSSAPI_LDFLAGS) $(KRB5_LDFLAGS) $(GPUT_LDFLAGS) \
 	$(PCRE_LDFLAGS) $(LIBEVENT_LDFLAGS)
 server_remctld_LDADD = util/libutil.la portable/libportable.la	\
 	$(GSSAPI_LIBS) $(KRB5_LIBS) $(GPUT_LIBS) $(PCRE_LIBS)	\
-	$(LIBEVENT_LIBS) $(SYSTEMD_DAEMON_LIBS)
+	$(LIBEVENT_LIBS) $(SYSTEMD_LIBS)
 
 # Install the systemd unit file if systemd support was detected.
 if HAVE_SYSTEMD
diff --git a/m4/systemd.m4 b/m4/systemd.m4
index 98e1cc7..902476d 100644
--- a/m4/systemd.m4
+++ b/m4/systemd.m4
@@ -16,6 +16,7 @@ dnl The canonical version of this file is maintained in the rra-c-util
 dnl package, available at <http://www.eyrie.org/~eagle/software/rra-c-util/>.
 dnl
 dnl Written by Russ Allbery <eagle@eyrie.org>
+dnl Copyright 2015 Russ Allbery <eagle@eyrie.org>
 dnl Copyright 2013, 2014
 dnl     The Board of Trustees of the Leland Stanford Junior University
 dnl
@@ -33,15 +34,22 @@ AC_DEFUN([RRA_WITH_SYSTEMD_UNITDIR],
     [AS_HELP_STRING([--with-systemdsystemunitdir=DIR],
         [Directory for systemd service files])],
     [],
-    [with_systemdsystemunitdir=$($PKG_CONFIG --variable=systemdsystemunitdir systemd)])
+    [with_systemdsystemunitdir=`$PKG_CONFIG --variable=systemdsystemunitdir systemd`])
  AS_IF([test x"$with_systemdsystemunitdir" != xno],
     [AC_SUBST([systemdsystemunitdir], [$with_systemdsystemunitdir])])
  AM_CONDITIONAL([HAVE_SYSTEMD],
     [test -n "$with_systemdsystemunitdir" -a x"$with_systemdsystemunitdir" != xno])])
 
-dnl Check for libsystemd-daemon and define SYSTEMD_DAEMON_{CFLAGS,LIBS} if it
-dnl is available.
+dnl Check for libsystemd or libsystemd-daemon and define SYSTEMD_{CFLAGS,LIBS}
+dnl if it is available.  This is called RRA_LIB_SYSTEMD_DAEMON_OPTIONAL since
+dnl it was originally written when libsystemd-daemon was separate, and only
+dnl checks for that library.  It may eventually make sense to retire this in
+dnl favor of a simple RRA_LIB_SYSTEMD_OPTIONAL that isn't backward-compatible.
 AC_DEFUN([RRA_LIB_SYSTEMD_DAEMON_OPTIONAL],
-[PKG_CHECK_EXISTS([libsystemd-daemon],
-    [PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd-daemon])
-     AC_DEFINE([HAVE_SD_NOTIFY], 1, [Define if sd_notify is available.])])])
+[PKG_CHECK_EXISTS([libsystemd],
+    [PKG_CHECK_MODULES([SYSTEMD], [libsystemd])
+     AC_DEFINE([HAVE_SD_NOTIFY], 1, [Define if sd_notify is available.])],
+    [PKG_CHECK_EXISTS([libsystemd-daemon],
+        [PKG_CHECK_MODULES([SYSTEMD], [libsystemd-daemon])
+         AC_DEFINE([HAVE_SD_NOTIFY], 1,
+            [Define if sd_notify is available.])])])])
